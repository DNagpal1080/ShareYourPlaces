{"version":3,"sources":["Shared/context/Auth-context.js","Shared/components/UIElements/LoadingSpinner.js","Shared/components/UIElements/Backdrop.js","Shared/hooks/auth-hook.js","Shared/components/Nevigation/MainHeader.js","Shared/components/Nevigation/NavLinks.js","Shared/components/Nevigation/SideDrawer.js","Shared/components/Nevigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","content","onClick","children","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","auth","useContext","to","exact","SideDrawer","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","e","Fragment","useAuth","setToken","setuserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","tokenExpData","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","useEffect","storeData","parse","getItem","removeItem","remainingTime","setTimeout","clearInterval","Users","React","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","routes","path","Provider","value","basename","fallback","render"],"mappings":"2GAAA,6CAEaA,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,gCCPV,0BAYeC,IARQ,SAAAC,GACrB,OACE,yBAAKC,UAAS,UAAKD,EAAME,WAAa,6BACpC,yBAAKD,UAAU,qB,6BCPrB,0CAUeE,IALE,SAAAH,GAEb,IAAOI,EAAU,yBAAKH,UAAU,WAAWI,QAASL,EAAMK,SAAUL,EAAMM,UAC1E,OAAOC,IAASC,aAAaJ,EAAQK,SAASC,eAAe,oB,sNCN7DC,E,qECSWC,G,MAPI,SAAAZ,GAEf,OAAO,4BAAQC,UAAU,eACpBD,EAAMM,Y,eC+BAO,G,MAhCE,SAAAb,GACb,IAAMc,EAAOC,qBAAWvB,KACxB,OAAO,wBAAIS,UAAU,aACjB,4BACI,kBAAC,IAAD,CAASe,GAAG,IAAIC,OAAK,GAArB,cAEHH,EAAKpB,YACF,4BACI,kBAAC,IAAD,CAASsB,GAAE,WAAMF,EAAKnB,OAAX,YAAX,cAGPmB,EAAKpB,YACF,4BACI,kBAAC,IAAD,CAASsB,GAAG,eAAZ,eAINF,EAAKpB,YACH,4BACI,kBAAC,IAAD,CAASsB,GAAG,SAAZ,iBAIPF,EAAKpB,YACF,4BACI,4BAAQW,QAASS,EAAKhB,QAAtB,c,QCfDoB,G,MATI,SAAAlB,GACf,IAAMI,EACF,kBAACe,EAAA,EAAD,CAAeC,GAAIpB,EAAMqB,KAAMC,QAAS,IAAKC,WAAW,gBAAgBC,cAAY,EAACC,eAAa,GAC9F,2BAAOxB,UAAU,cAAcI,QAASL,EAAMK,SAAUL,EAAMM,SAA9D,MAER,OAAOC,IAASC,aAAaJ,EAASK,SAASC,eAAe,kBCmCnDgB,EAvCQ,SAAA1B,GACnB,MAAwC2B,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAqB,SAACC,GACxBF,GAAgB,IAGpB,OACI,kBAAC,IAAMG,SAAP,KACKJ,GAAgB,kBAACzB,EAAA,EAAD,CAAUE,QAASyB,GAAnB,0BAEjB,kBAAC,EAAD,CAAYT,KAAMO,EAAcvB,QAASyB,GACrC,yBAAK7B,UAAU,+BACX,kBAAC,EAAD,QAGR,kBAAC,EAAD,KAEI,4BAAQA,UAAU,4BAA4BI,QAnBhC,SAAC0B,GACvBF,GAAgB,KAmBJ,+BACA,+BACA,gCAEJ,wBAAI5B,UAAU,0BAAd,eAGA,yBAAKA,UAAU,+BACX,kBAAC,EAAD,UJmBLgC,EAtDC,WACd,MAA0BN,oBAAS,GAAnC,mBAAO/B,EAAP,KAAcsC,EAAd,KACA,EAA4BP,qBAA5B,mBAAOhC,EAAP,KAAewC,EAAf,KACA,EAAsDR,qBAAtD,mBAAOS,EAAP,KAA4BC,EAA5B,KAGMxC,EAAQyC,uBAAY,SAACC,EAAK3C,EAAO4C,GACrCN,EAAStC,GACTuC,EAAUI,GACV,IAAME,EACJD,GAAkB,IAAIE,MAAK,IAAIA,MAAOC,UAAY,MAEpDN,EAAuBI,GACvBG,aAAaC,QACX,WACAC,KAAKC,UAAU,CACbpD,OAAQ4C,EACR3C,MAAOA,EACPoD,WAAYP,EAAaQ,mBAG5B,IAEHC,qBAAU,WACR,IAAMC,EAAYL,KAAKM,MAAMR,aAAaS,QAAQ,aAEhDF,GACAA,EAAUvD,OACV,IAAI8C,KAAKS,EAAUH,YAAc,IAAIN,MAErC7C,EAAMsD,EAAUxD,OAAQwD,EAAUvD,MAAO,IAAI8C,KAAKS,EAAUH,eAE7D,CAACnD,IAEJ,IAAMC,EAASwC,uBAAY,WACzBJ,EAAS,MACTG,EAAuB,MACvBF,EAAU,MACVS,aAAaU,WAAW,cACvB,IAYH,OAVAJ,qBAAU,WACR,GAAItD,GAASwC,EAAqB,CAChC,IAAMmB,EACJnB,EAAoBO,WAAY,IAAID,MAAOC,UAC7ChC,EAAc6C,WAAW1D,EAAQyD,QAEjCE,cAAc9C,KAEf,CAACf,EAAOE,EAAQsC,IAEZ,CAAExC,QAAOC,QAAOC,SAAQH,W,QKzC3B+D,EAAQC,IAAMC,MAAK,kBAAM,gCACzBC,EAAaF,IAAMC,MAAK,kBAAM,gCAC9BE,EAAWH,IAAMC,MAAK,kBAAM,gCAC5BG,EAAcJ,IAAMC,MAAK,kBAAM,gCAC/BI,EAAOL,IAAMC,MAAK,kBAAM,gCAuEfK,EArEH,WACV,IACIC,EADJ,EAAyCjC,IAAjCrC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,OAAQH,EAA9B,EAA8BA,OAsC9B,OAlCEuE,EADEtE,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuE,KAAK,mBAAmBlD,OAAK,GAClC,kBAACyC,EAAD,OAEF,kBAAC,IAAD,CAAOS,KAAK,kBAAkBlD,OAAK,GACjC,kBAAC4C,EAAD,OAEF,kBAAC,IAAD,CAAOM,KAAK,cAAclD,OAAK,GAC7B,kBAAC6C,EAAD,OAEF,kBAAC,IAAD,CAAOK,KAAK,mBAAmBlD,OAAK,GAClC,kBAAC8C,EAAD,OAEF,kBAAC,IAAD,CAAU/C,GAAG,OAKf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,mBAAmBlD,OAAK,GAClC,kBAACyC,EAAD,OAEF,kBAAC,IAAD,CAAOS,KAAK,kBAAkBlD,OAAK,GACjC,kBAAC4C,EAAD,OAEF,kBAAC,IAAD,CAAOM,KAAK,QAAQlD,OAAK,GACvB,kBAAC+C,EAAD,OAEF,kBAAC,IAAD,CAAUhD,GAAG,WAMjB,kBAAC,IAAYoD,SAAb,CACEC,MAAO,CACL3E,aAAcE,EACdA,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAMkC,SAAP,KACE,kBAAC,IAAD,CAAQsC,SAAS,oBACf,kBAAC,EAAD,MACA,8BACE,kBAAC,WAAD,CACEC,SACE,yBAAKtE,UAAU,UACb,kBAACF,EAAA,EAAD,QAIHmE,QC1Ef3D,IAASiE,OAAO,kBAAC,EAAD,MAAS/D,SAASC,eAAe,W","file":"static/js/main.0da9de6a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props =>{\r\n    \r\n    const  content = <div className='backdrop' onClick={props.onClick}>{props.children}</div>\r\n    return ReactDOM.createPortal(content,document.getElementById('backdrop-hook'))\r\n}\r\nexport default Backdrop","import { useCallback, useEffect, useState } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setuserId] = useState();\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  //Login with credentials\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setuserId(uid);\r\n    const tokenExpData =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 30);\r\n\r\n    setTokenExpirationDate(tokenExpData);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpData.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storeData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storeData &&\r\n      storeData.token &&\r\n      new Date(storeData.expiration) > new Date()\r\n    ) {\r\n      login(storeData.userId, storeData.token, new Date(storeData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setuserId(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearInterval(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n\r\nexport default useAuth;\r\n","import React from 'react'\r\n\r\nimport './MainHeader.css'\r\n\r\nconst MainHeader = props => {\r\n\r\n    return <header className='main-header'>\r\n        {props.children}\r\n    </header>\r\n}\r\n\r\nexport default MainHeader","import React, { useContext } from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/Auth-context'\r\nimport './NavLinks.css'\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n    return <ul className='nav-links'>\r\n        <li>\r\n            <NavLink to='/' exact>ALL USERS</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to='/places/new'>ADD PLACE</NavLink>\r\n            </li>\r\n        )\r\n        }\r\n        {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to='/auth'>AUTHENTICATE</NavLink>\r\n            </li>\r\n        )\r\n        }\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <button onClick={auth.logout}>LOGOUT</button>\r\n            </li>\r\n        )\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default NavLinks","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\nimport './SideDrawer.css'\r\n\r\nconst SideDrawer = props => {\r\n    const content =\r\n        <CSSTransition in={props.show} timeout={200} classNames='slide-in-left' mountOnEnter unmountOnExit>\r\n            <aside className='side-drawer' onClick={props.onClick}>{props.children} </aside>\r\n        </CSSTransition>\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\r\n\r\n}\r\n\r\nexport default SideDrawer","import React, { useState } from 'react'\r\nimport Backdrop from '../UIElements/Backdrop'\r\n\r\nimport MainHeader from './MainHeader'\r\nimport './MainNavigation.css'\r\nimport NavLinks from './NavLinks'\r\nimport SideDrawer from './SideDrawer'\r\n\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = (e) => {\r\n        setDrawerIsOpen(true)\r\n    }\r\n\r\n    const closeDrawerHandler = (e) => {\r\n        setDrawerIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}> My Backdrop Component</Backdrop>}\r\n\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className='main-navigation__drawer-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                </button>\r\n                <h1 className='main-navigation__title'>\r\n                    Your Places\r\n                </h1>\r\n                <nav className='main-navigation__header-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","import React, { Suspense } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport MainNavigation from './Shared/components/Nevigation/MainNavigation';\nimport { AuthContext } from './Shared/context/Auth-context';\nimport useAuth from './Shared/hooks/auth-hook';\nimport LoadingSpinner from './Shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./Users/pages/Users'));\nconst UserPlaces = React.lazy(() => import('./Places/pages/UserPlaces'));\nconst NewPlace = React.lazy(() => import('./Places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(() => import('./Places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./Users/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/ShareYourPlaces\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/ShareYourPlaces\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/Places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <React.Fragment>\n        <Router basename=\"/ShareYourPlaces\">\n          <MainNavigation />\n          <main>\n            <Suspense\n              fallback={\n                <div className=\"center\">\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              {routes}\n            </Suspense>\n          </main>\n        </Router>\n      </React.Fragment>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}