{"version":3,"sources":["Shared/components/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Shared/components/UIElements/ErrorModal.js","Shared/components/UIElements/Modal.js","Shared/hooks/http-hook.js","Shared/components/UIElements/Card.js","Places/components/PlaceItem.js","Places/components/PlaceList.js","Places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","currReq","ok","Error","message","useEffect","forEach","abortCtrl","clearError","Card","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","closeMapHandler","showConfirmModal","setShowConfirmModal","cancelDeleteWarningHandler","e","confirmDeleteHandler","process","id","Authorization","token","onDelete","console","log","onclear","address","LoadingSpinner","asOverlay","src","image","alt","title","discription","userId","createrID","PlaceList","item","length","map","place","description","coordinates","onDeleteCallback","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","pid","previousPlaces"],"mappings":"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","file":"static/js/6.6575bae4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  \n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Backdrop from './Backdrop'\r\n\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                {props.header}\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }>\r\n            </form>\r\n\r\n            <div className={`modal__content ${props.contentClass}`}>\r\n                {props.children}\r\n            </div>\r\n\r\n            <footer className={`modal__footer ${props.footerClass}`}>\r\n                {props.footer}\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n\r\n}\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel}></Backdrop>}\r\n\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames='modal'>\r\n                <ModalOverlay {...props} />\r\n\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Modal","import { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (currReq) => currReq !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        setError(error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abortCtrl);\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React, { useState, useContext } from 'react';\r\n\r\nimport Button from '../../Shared/components/FormElements/Button';\r\nimport { AuthContext } from '../../Shared/context/Auth-context';\r\n\r\nimport './PlaceItem.css';\r\nimport Modal from '../../Shared/components/UIElements/Modal';\r\nimport { useHttpClient } from '../../Shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../Shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../Shared/components/UIElements/ErrorModal';\r\nimport Card from '../../Shared/components/UIElements/Card';\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const openMapHandler = (props) => setShowMap(true);\r\n  const closeMapHandler = (props) => setShowMap(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteWarningHandler = (e) => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onclear={clearError} />\r\n\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item-modal__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n      >\r\n        <div className=\"main-container\">\r\n          <h2>The Map!!</h2>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteWarningHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n            <Button danger onClick={cancelDeleteWarningHandler}>\r\n              CANCEL\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you sure want to proceeds and delete this place ? Please note that\r\n          it can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSETS_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.discription}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW On MAP\r\n            </Button>\r\n            {auth.userId === props.createrID && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.createrID && (\r\n              <Button onClick={showDeleteWarningHandler}>DELETE</Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport Button from '../../Shared/components/FormElements/Button';\r\nimport Card from '../../Shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\n\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.item.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2> No Items to Display</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.item.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          createrID={place.createrID}\r\n          coordinates={place.coordinates}\r\n          onDelete={props.onDeleteCallback}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PlaceList from '../components/PlaceList';\r\nimport { useHttpClient } from '../../Shared/hooks/http-hook';\r\nimport ErrorModal from '../../Shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../Shared/components/UIElements/LoadingSpinner';\r\n\r\nimport './UserPlaces.css';\r\n\r\nconst UserPlaces = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const onDeletePlace = (pid) => {\r\n    console.log('onDeleteCallback method call');\r\n    setLoadedPlaces((previousPlaces) =>\r\n      previousPlaces.filter((place) => place.id !== pid)\r\n    );\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList\r\n          item={loadedPlaces}\r\n          onDeleteCallback={onDeletePlace}\r\n        ></PlaceList>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}